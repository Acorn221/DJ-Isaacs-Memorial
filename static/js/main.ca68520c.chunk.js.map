{"version":3,"sources":["images/upscaler-deepdream-cropped-2x-morecrop.jpg","QuoteSwitcher.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteSwitcher","props","currentQuote","timePerWord","classNameArray","fadeTimeout","running","fadeTime","quoteSection","quotes","quotesImport","console","log","length","result","characters","charactersLength","i","push","charAt","Math","floor","random","join","bool","a","Promise","resolve","filter","x","indexOf","forceUpdate","setTimeout","this","error","fade","delayTime","quote","split","notUnmounted","fadeSequence","className","getClassName","name","makeid","React","Component","App","src","djImg","alt","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca68520c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/upscaler-deepdream-cropped-2x-morecrop.8ffc2b33.jpg\";","import React from 'react';\r\nimport * as quotesImport from './quotes.json';\r\n\r\nclass QuoteSwitcher extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.currentQuote = 0;\r\n      this.timePerWord = props.timePerWord;\r\n      this.classNameArray = [\"quotes\"];\r\n      this.fadeTimeout = {running: false};\r\n      this.fadeTime = props.fadeTime*1000;\r\n      this.quoteSection = props.quoteSection;\r\n      this.quotes = quotesImport.default[this.quoteSection].quotes;\r\n      console.log(this.quotes);\r\n    }\r\n    makeid(length) {\r\n        var result           = [];\r\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for ( var i = 0; i < length; i++ ) {\r\n          result.push(characters.charAt(Math.floor(Math.random() * \r\n     charactersLength)));\r\n       }\r\n       return result.join('');\r\n    }\r\n    async fade(bool) {\r\n        return new Promise((resolve) => {\r\n          this.classNameArray = this.classNameArray.filter(x => x !== \"fadedOut\");\r\n          if(this.classNameArray.indexOf(bool ? \"fadeIn\" : \"fadeOut\") === -1) this.classNameArray.push(bool ? \"fadeIn\" : \"fadeOut\");\r\n          this.forceUpdate();\r\n          setTimeout(() => {\r\n            this.classNameArray = this.classNameArray.filter(x => x !== \"fadeIn\" && x !== \"fadeOut\");\r\n            if(!bool)this.classNameArray.push(\"fadedOut\");\r\n            console.log(\"Removing fade\");\r\n            this.fadeTimeout.running = false;\r\n            this.forceUpdate();\r\n            resolve();\r\n          }, this.fadeTime);\r\n        });\r\n    }\r\n    async fadeSequence(){\r\n      console.log(\"fade sequence called\")\r\n      if(this.fadeTimeout.running) return console.error(\"Fade sequence called when it's running already\");\r\n      await this.fade(true);\r\n      var delayTime = (this.timePerWord*this.quotes[this.currentQuote].quote.split(\" \").length) - this.fadeTime;\r\n      console.log(\"Delay time: \"+delayTime);\r\n      await new Promise((resolve) => setTimeout(resolve, delayTime));\r\n      await this.fade(false);\r\n    }\r\n    \r\n  \r\n    async componentDidMount() {\r\n      this.notUnmounted = true;\r\n      while(this.notUnmounted){\r\n        this.currentQuote === this.quotes.length-1 ? this.currentQuote = 0 : this.currentQuote++;\r\n        this.classNameArray.push(\"fadeIn\");\r\n        console.log(this.quotes[this.currentQuote].quote);\r\n        await this.fadeSequence();\r\n      }\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      console.log(\"Component unmounted!!\");\r\n      this.notUnmounted = false;\r\n    }  \r\n\r\n    getClassName() {\r\n        return this.classNameArray.join(\" \");\r\n    }\r\n    render() {\r\n      return (\r\n        <div className={this.getClassName()} key={this.makeid(10)}>\r\n          {this.quoteSection}: <br></br>\r\n          {this.quotes[this.currentQuote].quote} - {this.quotes[this.currentQuote].name}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default QuoteSwitcher;","import djImg from './images/upscaler-deepdream-cropped-2x-morecrop.jpg'\nimport './App.css';\nimport QuoteSwitcher from './QuoteSwitcher';\n\n\nfunction Quote(props){\n  console.log(\"Running quote thing\");\n  var currentQuote = 0;\n  var quotes = [\n    {\"name\": \"James Arnott\", \"quote\": \"Mr Isaacs was my favourite teacher in school\"},\n    {\"name\": \"Josh Dinsdale\", \"quote\": \"I always sucked off DJ in class\"}\n  ];\n  var interval = setInterval(() => {\n    console.log(currentQuote);\n    currentQuote === quotes.length-1 ? currentQuote = 0 : currentQuote++;\n    document.querySelector(\"#currentQuote\").innerText = `${quotes[currentQuote].quote} - ${quotes[currentQuote].name}`;\n    console.log(\"Changed Quote!\");\n  }, 1000);\n  return <p id=\"currentQuote\">{quotes[props.startQuote].quote} - {quotes[props.startQuote].name}</p>\n} // <Quote startQuote=\"0\"></Quote>\n\nfunction App() {\n\n  // eslint-disable-next-line\n  return (\n    \n    <div className=\"App\">\n      <img src={djImg} alt=\"\" className=\"backgroundDJ\"></img>\n      <header className=\"App-header\">\n        <div className=\"Title\">\n          <h1>David (DJ) Isaacs</h1>\n          <h2>Memorial</h2>\n          \n        </div>\n        <br></br>\n        <p className=\"subTitle\">\n          A memorial for him, from his students\n        </p>\n      </header>\n      <QuoteSwitcher timePerWord=\"500\" fadeTime=\"1\" quoteSection=\"Best Moments\"/>\n      <div className=\"formLinkContainer\">\n      <a className=\"responseForm\" href=\"https://forms.gle/CT63yfhdCnmfx25p6\">\n        Click Here To Submit Your Own Experiences With Mr Isaacs\n      </a>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}